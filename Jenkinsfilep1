def database_names = [
  'demo1',
  'demo_system1',
  'demo_system2'
]

// def workspace_path = "/var/lib/jenkins/workspace/DAC_liquibase"


pipeline {
  agent any
  environment {
    JOB_NAME = 'DAC_liquibase'
    DATABASE_RDS_EP = credentials('DATABASE_RDS_EP') 
    DATABASE_RDS_USR = credentials('DATABASE_RDS_USR') 
    DATABASE_RDS_PSD = credentials('DATABASE_RDS_PSD') 
    DRIVER_NAME = "com.mysql.cj.jdbc.Driver"
  }
  stages {
    

    stage('Status') {
      steps {
        script {

          // def buildDirectories = sh(script: 'ls -d /var/lib/jenkins/jobs/${JOB_NAME}/builds/*/ | grep -o "[0-9]*" | sort -n', returnStdout: true).trim().readLines()
          // def highestNumber = buildDirectories.last()
          // sh "docker run --rm -v /var/lib/jenkins/workspace/DAC_liquibase/changelogs/:/liquibase/changelog -v  /var/lib/jenkins/workspace/DAC_liquibase/liquibasedep/:/liquibase/lib liquibase/liquibase --url=${DATABASE_RDS_EP}/${database_names[i]} --driver=$DRIVER_NAME --changeLogFile=${database_names[i]}/main.xml --username=$DATABASE_RDS_USR --password=$DATABASE_RDS_PSD tag --tag=${database_names[i]}-${highestNumber}"

          for (int i = 0; i < database_names.size(); ++i) {
            sh "docker run --rm -v /var/lib/jenkins/workspace/DAC_liquibase/changelogs/:/liquibase/changelog -v  /var/lib/jenkins/workspace/DAC_liquibase/liquibasedep/:/liquibase/lib liquibase/liquibase --url=${DATABASE_RDS_EP}/${database_names[i]} --driver=$DRIVER_NAME --changeLogFile=${database_names[i]}/main.xml --username=$DATABASE_RDS_USR --password=$DATABASE_RDS_PSD status"
           
          }
        }
      }
    }

   
  }
  
}